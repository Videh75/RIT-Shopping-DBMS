{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: true\n};\nconst ToastHeader =\n/*#__PURE__*/\nReact.forwardRef(({\n  bsPrefix,\n  closeLabel,\n  closeVariant,\n  closeButton,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  const context = useContext(ToastContext);\n  const handleClick = useEventCallback(e => {\n    context == null ? void 0 : context.onClose == null ? void 0 : context.onClose(e);\n  });\n  return (\n    /*#__PURE__*/\n    _jsxs(\"div\", {\n      ref: ref,\n      ...props,\n      className: classNames(bsPrefix, className),\n      children: [children, closeButton &&\n      /*#__PURE__*/\n      _jsx(CloseButton, {\n        \"aria-label\": closeLabel,\n        variant: closeVariant,\n        onClick: handleClick,\n        \"data-dismiss\": \"toast\"\n      })]\n    })\n  );\n});\nToastHeader.displayName = 'ToastHeader';\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","map":{"version":3,"sources":["C:/Users/Videh Nandini/Desktop/Web Development/DBS Project/frontend/node_modules/react-bootstrap/esm/ToastHeader.js"],"names":["classNames","React","useContext","useEventCallback","useBootstrapPrefix","CloseButton","ToastContext","jsx","_jsx","jsxs","_jsxs","defaultProps","closeLabel","closeButton","ToastHeader","forwardRef","bsPrefix","closeVariant","className","children","props","ref","context","handleClick","e","onClose","variant","onClick","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,OADO;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAIA,MAAMC,WAAW;AAAG;AAAab,KAAK,CAACc,UAAN,CAAiB,CAAC;AACjDC,EAAAA,QADiD;AAEjDJ,EAAAA,UAFiD;AAGjDK,EAAAA,YAHiD;AAIjDJ,EAAAA,WAJiD;AAKjDK,EAAAA,SALiD;AAMjDC,EAAAA,QANiD;AAOjD,KAAGC;AAP8C,CAAD,EAQ/CC,GAR+C,KAQvC;AACTL,EAAAA,QAAQ,GAAGZ,kBAAkB,CAACY,QAAD,EAAW,cAAX,CAA7B;AACA,QAAMM,OAAO,GAAGpB,UAAU,CAACI,YAAD,CAA1B;AACA,QAAMiB,WAAW,GAAGpB,gBAAgB,CAACqB,CAAC,IAAI;AACxCF,IAAAA,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACG,OAAR,IAAmB,IAAnB,GAA0B,KAAK,CAA/B,GAAmCH,OAAO,CAACG,OAAR,CAAgBD,CAAhB,CAA9D;AACD,GAFmC,CAApC;AAGA;AAAO;AAAad,IAAAA,KAAK,CAAC,KAAD,EAAQ;AAC/BW,MAAAA,GAAG,EAAEA,GAD0B;AAE/B,SAAGD,KAF4B;AAG/BF,MAAAA,SAAS,EAAElB,UAAU,CAACgB,QAAD,EAAWE,SAAX,CAHU;AAI/BC,MAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWN,WAAW;AAAI;AAAaL,MAAAA,IAAI,CAACH,WAAD,EAAc;AACjE,sBAAcO,UADmD;AAEjEc,QAAAA,OAAO,EAAET,YAFwD;AAGjEU,QAAAA,OAAO,EAAEJ,WAHwD;AAIjE,wBAAgB;AAJiD,OAAd,CAA3C;AAJqB,KAAR;AAAzB;AAWD,CAzBgC,CAAjC;AA0BAT,WAAW,CAACc,WAAZ,GAA0B,aAA1B;AACAd,WAAW,CAACH,YAAZ,GAA2BA,YAA3B;AACA,eAAeG,WAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport useEventCallback from '@restart/hooks/useEventCallback';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport CloseButton from './CloseButton';\r\nimport ToastContext from './ToastContext';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst defaultProps = {\r\n  closeLabel: 'Close',\r\n  closeButton: true\r\n};\r\nconst ToastHeader = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  closeLabel,\r\n  closeVariant,\r\n  closeButton,\r\n  className,\r\n  children,\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\r\n  const context = useContext(ToastContext);\r\n  const handleClick = useEventCallback(e => {\r\n    context == null ? void 0 : context.onClose == null ? void 0 : context.onClose(e);\r\n  });\r\n  return /*#__PURE__*/_jsxs(\"div\", {\r\n    ref: ref,\r\n    ...props,\r\n    className: classNames(bsPrefix, className),\r\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\r\n      \"aria-label\": closeLabel,\r\n      variant: closeVariant,\r\n      onClick: handleClick,\r\n      \"data-dismiss\": \"toast\"\r\n    })]\r\n  });\r\n});\r\nToastHeader.displayName = 'ToastHeader';\r\nToastHeader.defaultProps = defaultProps;\r\nexport default ToastHeader;"]},"metadata":{},"sourceType":"module"}