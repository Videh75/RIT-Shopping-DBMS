{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props =>\n/*#__PURE__*/\n_jsx(InputGroupText, {\n  children:\n  /*#__PURE__*/\n  _jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props =>\n/*#__PURE__*/\n_jsx(InputGroupText, {\n  children:\n  /*#__PURE__*/\n  _jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n/**\r\n *\r\n * @property {InputGroupText} Text\r\n * @property {InputGroupRadio} Radio\r\n * @property {InputGroupCheckbox} Checkbox\r\n */\n\n\nconst InputGroup =\n/*#__PURE__*/\nReact.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return (\n    /*#__PURE__*/\n    _jsx(InputGroupContext.Provider, {\n      value: contextValue,\n      children:\n      /*#__PURE__*/\n      _jsx(Component, {\n        ref: ref,\n        ...props,\n        className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n      })\n    })\n  );\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","map":{"version":3,"sources":["C:/Users/Videh Nandini/Desktop/Web Development/DBS Project/frontend/node_modules/react-bootstrap/esm/InputGroup.js"],"names":["classNames","React","useMemo","createWithBsPrefix","useBootstrapPrefix","FormCheckInput","InputGroupContext","jsx","_jsx","InputGroupText","Component","InputGroupCheckbox","props","children","type","InputGroupRadio","InputGroup","forwardRef","bsPrefix","size","hasValidation","className","as","ref","contextValue","Provider","value","displayName","Object","assign","Text","Radio","Checkbox"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,cAAc,GAAGN,kBAAkB,CAAC,kBAAD,EAAqB;AAC5DO,EAAAA,SAAS,EAAE;AADiD,CAArB,CAAzC;;AAIA,MAAMC,kBAAkB,GAAGC,KAAK;AAAI;AAAaJ,IAAI,CAACC,cAAD,EAAiB;AACpEI,EAAAA,QAAQ;AAAE;AAAaL,EAAAA,IAAI,CAACH,cAAD,EAAiB;AAC1CS,IAAAA,IAAI,EAAE,UADoC;AAE1C,OAAGF;AAFuC,GAAjB;AADyC,CAAjB,CAArD;;AAOA,MAAMG,eAAe,GAAGH,KAAK;AAAI;AAAaJ,IAAI,CAACC,cAAD,EAAiB;AACjEI,EAAAA,QAAQ;AAAE;AAAaL,EAAAA,IAAI,CAACH,cAAD,EAAiB;AAC1CS,IAAAA,IAAI,EAAE,OADoC;AAE1C,OAAGF;AAFuC,GAAjB;AADsC,CAAjB,CAAlD;AAOA;;;;;;;;AAMA,MAAMI,UAAU;AAAG;AAAaf,KAAK,CAACgB,UAAN,CAAiB,CAAC;AAChDC,EAAAA,QADgD;AAEhDC,EAAAA,IAFgD;AAGhDC,EAAAA,aAHgD;AAIhDC,EAAAA,SAJgD;AAKhD;AACAC,EAAAA,EAAE,EAAEZ,SAAS,GAAG,KANgC;AAOhD,KAAGE;AAP6C,CAAD,EAQ9CW,GAR8C,KAQtC;AACTL,EAAAA,QAAQ,GAAGd,kBAAkB,CAACc,QAAD,EAAW,aAAX,CAA7B,CADS,CAC+C;AACxD;;AAEA,QAAMM,YAAY,GAAGtB,OAAO,CAAC,OAAO,EAAP,CAAD,EAAa,EAAb,CAA5B;AACA;AAAO;AAAaM,IAAAA,IAAI,CAACF,iBAAiB,CAACmB,QAAnB,EAA6B;AACnDC,MAAAA,KAAK,EAAEF,YAD4C;AAEnDX,MAAAA,QAAQ;AAAE;AAAaL,MAAAA,IAAI,CAACE,SAAD,EAAY;AACrCa,QAAAA,GAAG,EAAEA,GADgC;AAErC,WAAGX,KAFkC;AAGrCS,QAAAA,SAAS,EAAErB,UAAU,CAACqB,SAAD,EAAYH,QAAZ,EAAsBC,IAAI,IAAK,GAAED,QAAS,IAAGC,IAAK,EAAlD,EAAqDC,aAAa,IAAI,gBAAtE;AAHgB,OAAZ;AAFwB,KAA7B;AAAxB;AAQD,CArB+B,CAAhC;AAsBAJ,UAAU,CAACW,WAAX,GAAyB,YAAzB;AACA,eAAeC,MAAM,CAACC,MAAP,CAAcb,UAAd,EAA0B;AACvCc,EAAAA,IAAI,EAAErB,cADiC;AAEvCsB,EAAAA,KAAK,EAAEhB,eAFgC;AAGvCiB,EAAAA,QAAQ,EAAErB;AAH6B,CAA1B,CAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useMemo } from 'react';\r\nimport createWithBsPrefix from './createWithBsPrefix';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport FormCheckInput from './FormCheckInput';\r\nimport InputGroupContext from './InputGroupContext';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst InputGroupText = createWithBsPrefix('input-group-text', {\r\n  Component: 'span'\r\n});\r\n\r\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\r\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\r\n    type: \"checkbox\",\r\n    ...props\r\n  })\r\n});\r\n\r\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\r\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\r\n    type: \"radio\",\r\n    ...props\r\n  })\r\n});\r\n\r\n/**\r\n *\r\n * @property {InputGroupText} Text\r\n * @property {InputGroupRadio} Radio\r\n * @property {InputGroupCheckbox} Checkbox\r\n */\r\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  size,\r\n  hasValidation,\r\n  className,\r\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n  as: Component = 'div',\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\r\n  // exists under an input group.\r\n\r\n  const contextValue = useMemo(() => ({}), []);\r\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\r\n    value: contextValue,\r\n    children: /*#__PURE__*/_jsx(Component, {\r\n      ref: ref,\r\n      ...props,\r\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\r\n    })\r\n  });\r\n});\r\nInputGroup.displayName = 'InputGroup';\r\nexport default Object.assign(InputGroup, {\r\n  Text: InputGroupText,\r\n  Radio: InputGroupRadio,\r\n  Checkbox: InputGroupCheckbox\r\n});"]},"metadata":{},"sourceType":"module"}